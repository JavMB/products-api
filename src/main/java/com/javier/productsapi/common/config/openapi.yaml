openapi: 3.0.3
info:
  title: Ecommerce API
  contact:
    name: Javi
    url: https://www.javiemengual.me
    email: javiermengual@live.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  version: 1.0.0
servers:
  - url: $http://localhost:8080
    description: Production
tags:
  - name: Product
    description: Product API operations
paths:
  /api/v1/products:
    get:
      tags:
        - Product
      summary: Get all products
      description: Get all products
      operationId: getAllProducts
      parameters:
        - name: pageSize
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductDto'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      tags:
        - Product
      summary: Update product
      description: Update product
      operationId: updateProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductDto'
        required: true
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    post:
      tags:
        - Product
      summary: Save product
      description: Save product
      operationId: saveProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductDto'
        required: true
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/v1/products/{id}:
    get:
      tags:
        - Product
      summary: Get product by id
      description: Get product by id
      operationId: getProductById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductDto'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      tags:
        - Product
      summary: Delete product
      description: Delete product
      operationId: deleteProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
components:
  schemas:
    ErrorMessage:
      type: object
      properties:
        message:
          type: string
        exception:
          type: string
        path:
          type: string
        errors:
          type: object
          additionalProperties:
            type: string
    UpdateProductDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          minLength: 1
        description:
          type: string
        price:
          type: number
          format: double
          maximum: 999.99
          minimum: 0.01
        file:
          type: string
          format: binary
    CreateProductDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          minLength: 1
        description:
          type: string
        price:
          type: number
          format: double
          maximum: 999.99
          minimum: 0.01
        file:
          type: string
          format: binary
    ProductDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: double
        image:
          type: string
